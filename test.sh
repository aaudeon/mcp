#!/bin/bash

# Script de test pour le serveur MCP Weather

set -e

echo "üß™ Tests du serveur MCP Weather"
echo "=============================="

# Fonction pour d√©tecter la commande Docker Compose
get_docker_compose_cmd() {
    if command -v docker-compose &> /dev/null; then
        echo "docker-compose"
    elif docker compose version &> /dev/null; then
        echo "docker compose"
    else
        return 1
    fi
}

# D√©tection de Docker Compose
DOCKER_COMPOSE_CMD=$(get_docker_compose_cmd)
if [ $? -ne 0 ]; then
    echo "‚ùå Docker Compose n'est pas disponible."
    exit 1
fi

# V√©rification que le serveur est d√©marr√©
if ! $DOCKER_COMPOSE_CMD ps | grep -q "Up"; then
    echo "‚ùå Le serveur n'est pas d√©marr√©. Lancez d'abord: $DOCKER_COMPOSE_CMD up -d"
    exit 1
fi

echo "üì° Test de connectivit√©..."

# Test de base - v√©rifier que le conteneur r√©pond
if $DOCKER_COMPOSE_CMD exec -T mcp-weather-server node -e "console.log('‚úÖ Node.js fonctionne')"; then
    echo "‚úÖ Conteneur accessible"
else
    echo "‚ùå Probl√®me de connectivit√© avec le conteneur"
    exit 1
fi

# Test des variables d'environnement
echo "üîß V√©rification de la configuration..."
if $DOCKER_COMPOSE_CMD exec -T mcp-weather-server node -e "
    require('dotenv').config();
    if (process.env.WEATHER_API_KEY) {
        console.log('‚úÖ Cl√© API configur√©e');
    } else {
        console.log('‚ùå Cl√© API manquante');
        process.exit(1);
    }
"; then
    echo "‚úÖ Configuration valide"
else
    echo "‚ùå Probl√®me de configuration"
    exit 1
fi

# Test d'une requ√™te m√©t√©o r√©elle (si possible)
echo "üå§Ô∏è  Test d'une requ√™te m√©t√©o..."
echo "   (Ce test n√©cessite une cl√© API valide)"

# Note: Ce test n√©cessiterait une interface HTTP ou un client MCP
# Pour le moment, on v√©rifie juste que le serveur peut d√©marrer
if $DOCKER_COMPOSE_CMD logs mcp-weather-server | grep -q "Weather MCP server running"; then
    echo "‚úÖ Serveur MCP d√©marr√© correctement"
else
    echo "‚ö†Ô∏è  Le serveur semble avoir des probl√®mes. V√©rifiez les logs:"
    echo "   $DOCKER_COMPOSE_CMD logs mcp-weather-server"
fi

echo ""
echo "üéâ Tests termin√©s !"
echo ""
echo "üí° Pour tester manuellement:"
echo "   1. Connectez votre client MCP au serveur"
echo "   2. Utilisez les outils : get_weather, get_weather_forecast, get_weather_by_coordinates"
echo ""
echo "üìã Exemple d'appel d'outil:"
echo '   {"name": "get_weather", "arguments": {"city": "Paris", "lang": "fr"}}'
