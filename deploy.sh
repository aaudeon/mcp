#!/bin/bash

set -e

echo "üöÄ D√©ploiement du serveur MCP Weather optimis√©"

# V√©rifications pr√©alables
check_dependencies() {
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker n'est pas install√©"
        exit 1
    fi

    if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null 2>&1; then
        echo "‚ùå Docker Compose n'est pas install√©"
        exit 1
    fi

    # D√©terminer la commande Docker Compose √† utiliser
    if command -v docker-compose &> /dev/null; then
        COMPOSE_CMD="docker-compose"
    else
        COMPOSE_CMD="docker compose"
    fi
    
    echo "‚úÖ Utilisation de : $COMPOSE_CMD"
}

# Cr√©ation du fichier .env si n√©cessaire
setup_env() {
    if [ ! -f .env ]; then
        echo "üìù Cr√©ation du fichier .env √† partir de .env.example"
        cp .env.example .env
        echo "‚ö†Ô∏è  Pensez √† modifier .env si n√©cessaire"
    else
        echo "‚úÖ Fichier .env existant"
    fi
}

# Nettoyage et construction
build_and_deploy() {
    echo "üßπ Nettoyage des anciens conteneurs..."
    $COMPOSE_CMD down --remove-orphans

    echo "üîß Construction de l'image..."
    $COMPOSE_CMD build --no-cache

    echo "üöÄ D√©marrage du serveur..."
    $COMPOSE_CMD up -d

    echo "‚è≥ V√©rification du statut..."
    sleep 10
    
    if $COMPOSE_CMD ps | grep -q "Up"; then
        echo "‚úÖ Serveur MCP Weather d√©ploy√© avec succ√®s!"
        echo "üìã Status:"
        $COMPOSE_CMD ps
    else
        echo "‚ùå Erreur lors du d√©ploiement"
        echo "üìã Logs:"
        $COMPOSE_CMD logs
        exit 1
    fi
}

# Affichage des informations post-d√©ploiement
show_info() {
    echo ""
    echo "ÔøΩ Informations utiles:"
    echo "  - Voir les logs: $COMPOSE_CMD logs -f"
    echo "  - Arr√™ter: $COMPOSE_CMD down"
    echo "  - Red√©marrer: $COMPOSE_CMD restart"
    echo "  - Status: $COMPOSE_CMD ps"
    echo ""
    echo "üîß Le serveur MCP est pr√™t √† √™tre utilis√© via stdio"
}

# Ex√©cution du d√©ploiement
main() {
    check_dependencies
    setup_env
    build_and_deploy
    show_info
}

main "$@"

# V√©rification des services
echo "üîç V√©rification des services..."

if $COMPOSE_CMD ps | grep -q "Up"; then
    echo "‚úÖ Services d√©marr√©s avec succ√®s !"
    echo ""
    echo "üåê Acc√®s aux services :"
    echo "   ‚Ä¢ MCP Weather Server: https://mcp-weather.top-exo.fr"
    echo "   ‚Ä¢ n8n Interface:      https://n8n.top-exo.fr"
    echo "   ‚Ä¢ Identifiants n8n:   admin / changeMe123!"
    echo ""
    echo "üìù Logs en temps r√©el :"
    echo "   $COMPOSE_CMD logs -f"
    echo ""
    echo "üîß Pour int√©grer le serveur MCP Weather dans n8n :"
    echo "   URL de base: https://mcp-weather.top-exo.fr"
    echo "   Endpoints disponibles:"
    echo "     - GET /health (sant√© du serveur)"
    echo "     - POST /api/weather (m√©t√©o par ville)"
    echo "     - POST /api/forecast (pr√©visions)"
    echo "     - POST /api/coordinates (m√©t√©o par coordonn√©es)"
else
    echo "‚ùå Erreur lors du d√©marrage des services"
    $COMPOSE_CMD logs
    exit 1
fi
